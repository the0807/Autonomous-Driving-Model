2024/08/09 15:39:22 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.14 (main, May  6 2024, 19:42:50) [GCC 11.2.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 1318015688
    GPU 0,1: Quadro RTX 5000
    CUDA_HOME: /usr/local/cuda-12.1
    NVCC: Cuda compilation tools, release 12.1, V12.1.105
    GCC: gcc (Ubuntu 9.4.0-1ubuntu1~20.04.2) 9.4.0
    PyTorch: 2.1.0+cu121
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2022.2-Product Build 20220804 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v3.1.1 (Git Hash 64f6bcbcbab628e96f33a62c3e975f8535a7bde4)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX512
  - CUDA Runtime 12.1
  - NVCC architecture flags: -gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_90,code=sm_90
  - CuDNN 8.9.7  (built against CUDA 12.2)
    - Built with CuDNN 8.9.2
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=12.1, CUDNN_VERSION=8.9.2, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=old-style-cast -Wno-invalid-partial-specialization -Wno-unused-private-field -Wno-aligned-allocation-unavailable -Wno-missing-braces -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_DISABLE_GPU_ASSERTS=ON, TORCH_VERSION=2.1.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=1, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.16.0+cu121
    OpenCV: 4.10.0
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 1318015688
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

2024/08/09 15:39:22 - mmengine - INFO - Config:
crop_size = (
    512,
    1024,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    size=(
        512,
        1024,
    ),
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'dataset/Preprocessed_2DSS'
dataset_type = 'seg2DSSDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'none'
load_from = 'work_dirs/deeplabv3plus_160k/iter_160000.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
model = dict(
    auxiliary_head=dict(
        align_corners=False,
        channels=256,
        concat_input=False,
        dropout_ratio=0.1,
        in_channels=1024,
        in_index=2,
        loss_decode=dict(
            loss_weight=0.4, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=24,
        num_convs=1,
        type='FCNHead'),
    backbone=dict(
        contract_dilation=True,
        depth=50,
        dilations=(
            1,
            1,
            2,
            4,
        ),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        norm_eval=False,
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        strides=(
            1,
            2,
            1,
            1,
        ),
        style='pytorch',
        type='ResNetV1c'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            512,
            1024,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        c1_channels=48,
        c1_in_channels=256,
        channels=512,
        dilations=(
            1,
            12,
            24,
            36,
        ),
        dropout_ratio=0.1,
        in_channels=2048,
        in_index=3,
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=24,
        type='DepthwiseSeparableASPPHead'),
    pretrained='open-mmlab://resnet50_v1c',
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    clip_grad=None,
    optimizer=dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0,
        by_epoch=False,
        end=160000,
        eta_min=0.0001,
        power=0.9,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/test', seg_map_path='annotations/test'),
        data_root='dataset/Preprocessed_2DSS',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                1024,
            ), type='Resize'),
            dict(type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='seg2DSSDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        1024,
    ), type='Resize'),
    dict(type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=3,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='dataset/Preprocessed_2DSS',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    1024,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    1024,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='seg2DSSDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            1024,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        1024,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='dataset/Preprocessed_2DSS',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                1024,
            ), type='Resize'),
            dict(type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='seg2DSSDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = './work_dirs/deeplabv3plus_160k'

2024/08/09 15:39:25 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
2024/08/09 15:39:25 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
2024/08/09 15:39:25 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
2024/08/09 15:39:25 - mmengine - INFO - Load checkpoint from work_dirs/deeplabv3plus_160k/iter_160000.pth
2024/08/09 15:39:46 - mmengine - INFO - Iter(test) [  50/1497]    eta: 0:09:54  time: 0.2957  data_time: 0.0044  memory: 8707  
2024/08/09 15:40:01 - mmengine - INFO - Iter(test) [ 100/1497]    eta: 0:08:13  time: 0.2968  data_time: 0.0038  memory: 1987  
2024/08/09 15:40:16 - mmengine - INFO - Iter(test) [ 150/1497]    eta: 0:07:31  time: 0.2975  data_time: 0.0038  memory: 1987  
2024/08/09 15:40:31 - mmengine - INFO - Iter(test) [ 200/1497]    eta: 0:07:02  time: 0.3006  data_time: 0.0050  memory: 1987  
2024/08/09 15:40:46 - mmengine - INFO - Iter(test) [ 250/1497]    eta: 0:06:39  time: 0.2986  data_time: 0.0038  memory: 1987  
2024/08/09 15:41:01 - mmengine - INFO - Iter(test) [ 300/1497]    eta: 0:06:19  time: 0.3009  data_time: 0.0050  memory: 1987  
2024/08/09 15:41:16 - mmengine - INFO - Iter(test) [ 350/1497]    eta: 0:06:01  time: 0.3022  data_time: 0.0059  memory: 1987  
2024/08/09 15:41:31 - mmengine - INFO - Iter(test) [ 400/1497]    eta: 0:05:43  time: 0.3002  data_time: 0.0048  memory: 1987  
2024/08/09 15:41:46 - mmengine - INFO - Iter(test) [ 450/1497]    eta: 0:05:26  time: 0.2991  data_time: 0.0038  memory: 1987  
2024/08/09 15:42:01 - mmengine - INFO - Iter(test) [ 500/1497]    eta: 0:05:09  time: 0.2987  data_time: 0.0038  memory: 1987  
2024/08/09 15:42:16 - mmengine - INFO - Iter(test) [ 550/1497]    eta: 0:04:52  time: 0.2985  data_time: 0.0037  memory: 1987  
2024/08/09 15:42:31 - mmengine - INFO - Iter(test) [ 600/1497]    eta: 0:04:36  time: 0.2987  data_time: 0.0038  memory: 1987  
2024/08/09 15:42:46 - mmengine - INFO - Iter(test) [ 650/1497]    eta: 0:04:20  time: 0.3007  data_time: 0.0049  memory: 1987  
2024/08/09 15:43:01 - mmengine - INFO - Iter(test) [ 700/1497]    eta: 0:04:04  time: 0.3009  data_time: 0.0050  memory: 1987  
2024/08/09 15:43:16 - mmengine - INFO - Iter(test) [ 750/1497]    eta: 0:03:49  time: 0.2990  data_time: 0.0038  memory: 1987  
2024/08/09 15:43:30 - mmengine - INFO - Iter(test) [ 800/1497]    eta: 0:03:33  time: 0.2989  data_time: 0.0038  memory: 1987  
2024/08/09 15:43:45 - mmengine - INFO - Iter(test) [ 850/1497]    eta: 0:03:17  time: 0.2995  data_time: 0.0042  memory: 1987  
2024/08/09 15:44:00 - mmengine - INFO - Iter(test) [ 900/1497]    eta: 0:03:02  time: 0.2989  data_time: 0.0037  memory: 1987  
2024/08/09 15:44:15 - mmengine - INFO - Iter(test) [ 950/1497]    eta: 0:02:46  time: 0.2991  data_time: 0.0038  memory: 1987  
2024/08/09 15:44:30 - mmengine - INFO - Iter(test) [1000/1497]    eta: 0:02:31  time: 0.2989  data_time: 0.0038  memory: 1987  
2024/08/09 15:44:45 - mmengine - INFO - Iter(test) [1050/1497]    eta: 0:02:16  time: 0.2999  data_time: 0.0043  memory: 1987  
2024/08/09 15:45:00 - mmengine - INFO - Iter(test) [1100/1497]    eta: 0:02:00  time: 0.2997  data_time: 0.0038  memory: 1987  
2024/08/09 15:45:15 - mmengine - INFO - Iter(test) [1150/1497]    eta: 0:01:45  time: 0.2999  data_time: 0.0044  memory: 1987  
2024/08/09 15:45:30 - mmengine - INFO - Iter(test) [1200/1497]    eta: 0:01:30  time: 0.2999  data_time: 0.0038  memory: 1987  
2024/08/09 15:45:45 - mmengine - INFO - Iter(test) [1250/1497]    eta: 0:01:15  time: 0.2997  data_time: 0.0038  memory: 1987  
2024/08/09 15:46:00 - mmengine - INFO - Iter(test) [1300/1497]    eta: 0:00:59  time: 0.2997  data_time: 0.0039  memory: 1987  
2024/08/09 15:46:15 - mmengine - INFO - Iter(test) [1350/1497]    eta: 0:00:44  time: 0.2992  data_time: 0.0039  memory: 1987  
2024/08/09 15:46:30 - mmengine - INFO - Iter(test) [1400/1497]    eta: 0:00:29  time: 0.2996  data_time: 0.0039  memory: 1987  
2024/08/09 15:46:45 - mmengine - INFO - Iter(test) [1450/1497]    eta: 0:00:14  time: 0.2993  data_time: 0.0038  memory: 1987  
2024/08/09 15:46:59 - mmengine - INFO - per class results:
2024/08/09 15:46:59 - mmengine - INFO - 
+------------------------+-------+-------+
|         Class          |  IoU  |  Acc  |
+------------------------+-------+-------+
|          road          | 95.61 | 97.62 |
|        sidewalk        | 77.54 |  88.3 |
|     road roughness     | 71.89 |  79.7 |
|    road boundaries     |  74.6 |  85.6 |
|       crosswalks       | 95.15 | 98.09 |
|          lane          | 77.24 | 85.27 |
|    road color guide    | 74.92 | 80.13 |
|      road marking      | 75.06 | 86.25 |
|        parking         | 66.53 | 76.03 |
|      traffic sign      | 73.71 |  82.2 |
|     traffic light      | 72.47 | 81.03 |
| pole/structural object |  84.1 | 92.37 |
|        building        | 89.85 | 95.16 |
|         tunnel         | 98.61 | 99.43 |
|         bridge         | 82.73 | 92.39 |
|       pedestrian       | 77.37 | 86.63 |
|        vehicle         | 92.77 | 96.23 |
|        bicycle         |  0.0  |  0.0  |
|       motorcycle       |  0.0  |  0.0  |
|   personal mobility    | 78.87 | 96.69 |
|        dynamic         |  59.8 | 74.96 |
|       vegetation       | 90.65 | 95.49 |
|          sky           | 98.43 | 99.13 |
|         static         |  81.3 | 88.41 |
+------------------------+-------+-------+
2024/08/09 15:46:59 - mmengine - INFO - Iter(test) [1497/1497]    aAcc: 96.2900  mIoU: 74.5500  mAcc: 81.5500  data_time: 0.0043  time: 0.3031
